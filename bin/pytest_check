#!/usr/bin/env bash

filenames=`ag -l 'assert(?:True|False|NotEqual|Equal)'`

PWD=`pwd`
AUTO_FIX=0
ERRORS=0

function print_error {
    RED='\033[0;31m'
    NC='\033[0m'
    echo -e "${RED}$1${NC}"
}

if [[ $1 == '--fix' ]]; then
  AUTO_FIX=1
fi

for file in ${filenames}
do
    error=0

    infractions=`grep -n -e "self.assertTrue(" $file | grep "isinstance("`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertTrue\(isinstance\((.*)\)\)/self.assertIsInstance($1)/g;' $PWD/$file
        else
            print_error "$file: assertTrue found, use assertIsInstance instead"
            print_error "fix with \"perl -i -p -e 's/self.assertTrue\\\(isinstance\\\((.*)\\\)\\\)/self.assertIsInstance(\$1)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertFalse(" $file | grep "isinstance("`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertFalse\(isinstance\((.*)\)\)/self.assertNotIsInstance($1)/g;' $PWD/$file
        else
            print_error "$file: assertFalse found, use assertNotIsInstance instead"
            print_error "fix with \"perl -i -p -e 's/self.assertFalse\\\(isinstance\\\((.*)\\\)\\\)/self.assertNotIsInstance(\$1)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi

    infractions=`grep -n -e "self.assertTrue(" $file | grep -e "(?<! not) in "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertTrue\((.*?) (?!not )in (.*)\)/self.assertIn($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertTrue found, use assertIn instead"
            print_error "fix with \"perl -i -p -e 's/self.assertTrue\\\((.*?) in (.*)\\\)/self.assertIn(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertFalse(" $file | grep -e " not in "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertFalse\((.*?) not in (.*)\)/self.assertIn($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertFalse found, use assertIn instead"
            print_error "fix with \"perl -i -p -e 's/self.assertFalse\\\((.*?) in (.*)\\\)/self.assertIn(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertTrue(" $file | grep -e " not in "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertTrue\((.*?) not in (.*)\)/self.assertNotIn($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertTrue found, use assertNotIn instead"
            print_error "fix with \"perl -i -p -e 's/self.assertTrue\\\((.*?) not in (.*)\\\)/self.assertNotIn(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertFalse(" $file | grep -e "(?<! not) in "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertFalse\((.*?) (?!not )in (.*)\)/self.assertNotIn($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertFalse found, use assertNotIn instead"
            print_error "fix with \"perl -i -p -e 's/self.assertFalse\\\((.*?) in (.*)\\\)/self.assertNotIn(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi

    infractions=`grep -n -e "self.assertTrue(" $file | grep " == "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertTrue\((.*?) == (.*)\)/self.assertEqual($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertTrue found, use assertEqual instead"
            print_error "fix with \"perl -i -p -e 's/self.assertTrue\\\((.*?) == (.*)\\\)/self.assertEqual(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertFalse(" $file | grep " != "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertFalse\((.*?) != (.*)\)/self.assertEqual($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertFalse found, use assertEqual instead"
            print_error "fix with \"perl -i -p -e 's/self.assertFalse\\\((.*?) != (.*)\\\)/self.assertEqual(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi

    infractions=`grep -n -e "self.assertTrue(" $file | grep " != "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertTrue\((.*) != (.*)\)/self.assertNotEqual($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertTrue found, use assertNotEqual instead"
            print_error "fix with \"perl -i -p -e 's/self.assertTrue\\\((.*?) != (.*)\\\)/self.assertNotEqual(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertFalse(" $file | grep " == "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertFalse\((.*) == (.*)\)/self.assertNotEqual($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertFalse found, use assertNotEqual instead"
            print_error "fix with \"perl -i -p -e 's/self.assertFalse\\\((.*?) == (.*)\\\)/self.assertNotEqual(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi

    infractions=`grep -n -e "self.assertTrue(" $file | grep " < "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertTrue\((.*) < (.*)\)/self.assertLess($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertTrue found, use assertLess instead"
            print_error "fix with \"perl -i -p -e 's/self.assertTrue\\\((.*?) < (.*)\\\)/self.assertLess(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertFalse(" $file | grep " > "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertFalse\((.*) > (.*)\)/self.assertLessEqual($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertFalse found, use assertLessEqual instead"
            print_error "fix with \"perl -i -p -e 's/self.assertFalse\\\((.*?) > (.*)\\\)/self.assertLessEqual(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi

    infractions=`grep -n -e "self.assertTrue(" $file | grep " > "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertTrue\((.*) > (.*)\)/self.assertGreater($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertTrue found, use assertGreater instead"
            print_error "fix with \"perl -i -p -e 's/self.assertTrue\\\((.*?) > (.*)\\\)/self.assertGreater(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertFalse(" $file | grep " < "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertFalse\((.*) < (.*)\)/self.assertGreaterEqual($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertFalse found, use assertGreaterEqual instead"
            print_error "fix with \"perl -i -p -e 's/self.assertFalse\\\((.*?) < (.*)\\\)/self.assertGreaterEqual(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi

    infractions=`grep -n -e "self.assertTrue(" $file | grep " >= "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertTrue\((.*) >= (.*)\)/self.assertGreaterEqual($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertTrue found, use assertGreaterEqual instead"
            print_error "fix with \"perl -i -p -e 's/self.assertTrue\\\((.*?) >= (.*)\\\)/self.assertGreaterEqual(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertFalse(" $file | grep " <= "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertFalse\((.*) <= (.*)\)/self.assertGreater($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertFalse found, use assertGreater instead"
            print_error "fix with \"perl -i -p -e 's/self.assertFalse\\\((.*?) <= (.*)\\\)/self.assertGreater(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi

    infractions=`grep -n -e "self.assertTrue(" $file | grep " <= "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertTrue\((.*) <= (.*)\)/self.assertLessEqual($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertTrue found, use assertLessEqual instead"
            print_error "fix with \"perl -i -p -e 's/self.assertTrue\\\((.*?) <= (.*)\\\)\s*$/self.assertLessEqual(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    infractions=`grep -n -e "self.assertFalse(" $file | grep " >= "`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertFalse\((.*) >= (.*)\)/self.assertLess($1, $2)/g;' $PWD/$file
        else
            print_error "$file: assertFalse found, use assertLess instead"
            print_error "fix with \"perl -i -p -e 's/self.assertFalse\\\((.*?) >= (.*)\\\)/self.assertLess(\$1, \$2)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi

   infractions=`grep -n -E -e "self.assertEquals?(.*, (True|False))\s*(?:#.*)$" $file`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertEquals?\((.*?), (True|False)\)/\s*(?:#.*)$self.assert$2($1)/g;' $PWD/$file
        else
            print_error "$file: assertEqual found, use assert{True,False} instead"
            print_error "fix with \"perl -i -p -e 's/self.assertEquals?\\\((.*?), (True|False)\\\)\s*(?:#.*)$/self.assert\$2(\$1)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    results=`grep -n -E -e "self.assertEquals?(.*, None)\s*(?:#.*)$" $file`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertEquals?\((.*?), None\)\s*(?:#.*)$/self.assertIsNone($1)/g;' $PWD/$file
        else
            print_error "$file: assertEqual found, use assertIsNone instead"
            print_error "fix with \"perl -i -p -e 's/self.assertEquals?\\\((.*?), None\\\)\s*(?:#.*)$/self.assertIsNone(\$1)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi
    results=`grep -n -E -e "self.assertNotEquals?(.*, None)\s*(?:#.*)$" $file`
    if [[ -n "$infractions" ]]; then
        if [[ "$AUTO_FIX" > 0 ]]; then
            perl -i -p -e 's/self.assertNotEquals?\((.*?), None\)\s*(?:#.*)$/self.assertIsNotNone($1)/g;' $PWD/$file
        else
            print_error "$file: assertNotEqual found, use assertIsNotNone instead"
            print_error "fix with \"perl -i -p -e 's/self.assertNotEquals?\\\((.*?), None\\\)\s*(?:#.*)$/self.assertIsNotNone(\$1)/g;' $PWD/$file\""
            print_error "${infractions}"
            error=1
        fi
    fi

    if [[ "$error" == 0 ]]; then
        infractions=`grep -n -e "self.assertEquals(" $file`
        if [[ -n "$infractions" ]]; then
            if [[ "$AUTO_FIX" > 0 ]]; then
                perl -i -p -e 's/self.assertEquals\b/self.assertEqual/g;' $PWD/$file
            else
               print_error "$file: assertEquals is deprecated; use assertEqual instead"
               print_error "fix with \"perl -i -p -e 's/self.assertEquals\\\b/self.assertEqual/g;' $PWD/$file\""
               print_error "${infractions}"
               error=1
            fi
        fi
    fi

    if [[ "$error" > 0 ]]; then
        ERRORS=1
        echo
    fi
done

if [[ $ERRORS > 0 ]]; then
    echo "Please re-run this script with --fix if you would like all fixes made automatically."
fi
